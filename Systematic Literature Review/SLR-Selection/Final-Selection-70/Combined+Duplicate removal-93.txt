93
a noun-based approach to feature location using time-aware term-weighting
a search log mining based query expansion technique to improve effectiveness in code search
a similarity-based method retrieval technique to improve effectiveness in code search
a test-driven approach to code search and its application to the reuse of auxiliary functionality
active code search: incorporating user feedback to improve code search relevance
apibook: an effective approach for finding apis
applying a semantic layer in a source code search tool
are bug reports enough for text retrieval-based bug localization?
assisting code search with automatic query reformulation for bug localization
augmenting and structuring user queries to support efficient free-form code search
automatic query performance assessment during the retrieval of software artifacts
automatic query reformulations for feature location in a model-based family of software products
automatic query reformulations for text retrieval in software engineering
automatic search term identification for change tasks
automatically capturing source code context of nl-queries for software maintenance and reuse
automatically detecting the quality of the query and its implications in ir-based concept location
can the use of types and query expansion help improve large-scale code search?
code search via topic-enriched dependence graph matching
code search with input/output queries: generalizing, ranking, and assessment
codeexchange: supporting reformulation of internet-scale code queries in context
codehow: effective code search based on api understanding and extended boolean model
concept based query expansion using wordnet
conclave: ontology-driven measurement of semantic relatedness between source code elements and problem domain concepts
conquer: a tool for nl-based query refinement & contextualizing code search results
correlation-based software search by leveraging software term database
design and evaluation of a multi-recommendation system for local code search
detecting buggy files based on bug reports: a random walk based approach
dictionary-based query recommendation for local code search
discovering remote software services that satisfy requirements - patterns for query reformulation.
easysearch: finding relevant functions based on api documentation
effective reformulation of query for code search using crowdsourced knowledge and extra-large data analytics
enabling improved ir-based feature location
evaluating the specificity of text retrieval queries to support software engineering tasks
expanding queries for code search using semantically related api class-names
exploiting spatial code proximity and order for improved source code retrieval for bug localization
exploring action unit granularity of source code for supporting software maintenance
finding similar queries to satisfy searches based on query traces
how developers use multi-recommendation system in local code search
impact of structural weighting on a latent dirichlet allocation–based feature location technique
improved query reformulation for concept location using coderank and document structures
improving code search using learning-to-rank and query reformulation techniques
improving feature location by enhancing source code with stereotypes
improving feature location by transforming the query from natural language into requirements
improving feature location practice with multi-faceted interactive exploration
improving feature location using structural similarity and iterative graph mapping
improving ir-based bug localization with context-aware query reformulation
improving software text retrieval using conceptual knowledge in source code
improving source code search with natural language phrasal representations of method signatures
inferring semantically related words from software context
leveraging textual properties of bug reports to localize relevant source files
nl-based query refinement and contextualized code search results: a user study
on the effect of the query in ir-based concept location
on the reduction of verbose queries in text retrieval based software maintenance
on the use of input/output queries for code search
on the use of positional proximity in ir-based feature location
on the use of relevance feedback in ir-based concept location
portfolio: searching for relevant functions and their usages in millions of lines of code
poster: improving bug localization with report quality dynamics and query reformulation
precise and scalable querying of syntactical source code patterns using sample code snippets and a database
predicting query quality for applications of text retrieval to software engineering tasks
query by example in large-scale code repositories
query expansion based on crowd knowledge for code search
query expansion based on statistical learning from code changes
query expansion via intent predicting
query expansion via wordnet for effective code search
query quality prediction and reformulation for source code search: the refoqus tool
query reformulation by leveraging crowd wisdom for scenario-based software search
query terms abstraction layers
query-based configuration of text retrieval solutions for software engineering tasks
quickar : automatic query reformulation for concept location using crowdsourced knowledge
rack: automatic api recommendation using crowdsourced knowledge
rack: code search in the ide using crowdsourced knowledge
recommending frequently encountered bugs
relationship-aware code search for javascript frameworks
searching api usage examples in code repositories with sourcerer api search
snippetgen: enhancing the code search via intent predicting
source code retrieval on stackoverflow using lda
strict: information retrieval based search term identification for concept location
supporting concept location through identifier parsing and ontology extraction
supporting query formulation for text retrieval applications in software engineering
swim: synthesizing what i mean: code search and idiomatic snippet synthesis
swordnet: inferring semantically related words from software context
textrank based search term identification for software change tasks
thesaurus-based automatic query expansion for interface-driven code search
toward social-technical code search
towards query formulation and visualization of structural search results
typestate-based semantic code search over partial programs
understanding the impact of support for iteration on code search
using natural language program analysis to locate and understand action-oriented concerns
using observed behavior to reformulate queries during text retrieval-based bug localization
using ontology fragments in concept location
using structured queries for source code search
using thesaurus-based tag clouds to improve test-driven code search